liste <-c("magrittr", "derivmkts", "httr")
installation <- liste %in% installed.packages()
if(length(liste[!installation]) > 0) {
install.packages(liste[!installation], repos = "https://cran.rstudio.com/")
}
#### Importation des données ####
## importation taux banque du canada dans 5 dernières années
banque_can <- read.csv("taux_can.csv")
setwd("C:/Users/charl/OneDrive/Documents/ULAVAL_H25/GRF2/TP/TPGRF2")
#### Importation des données ####
## importation taux banque du canada dans 5 dernières années
banque_can <- read.csv("taux_can.csv")
## importation données mensuelles historiques
data_histo <- read.csv("DonnéesTPGRF2(version2).csv")
data_histo <- data_histo[-1, 13]
## création de la fonction pour faire les arbres binomiaux ####
### pour voir le code source écrire nom de la foncton sans parenthèse
#View(binomplot)
arbre <- function (s, k, v, r, tt, d, nstep, putopt = FALSE, american = TRUE,
plotvalues = FALSE, plotarrows = FALSE, drawstrike = TRUE,
pointsize = 4, ylimval = c(0, 0), saveplot = FALSE, saveplotfn = "binomialplot.pdf",
crr = FALSE, jarrowrudd = FALSE, titles = TRUE, specifyupdn = FALSE,
up = 1.5, dn = 0.5, returnprice = FALSE, logy = FALSE)
{
setylim <- ifelse((sum(ylimval^2) == 0), FALSE, TRUE)
y <- binomopt(s, k, v, r, tt, d, nstep, american, putopt,
specifyupdn, crr, jarrowrudd, up, dn, returnparams = TRUE,
returntrees = TRUE)
h <- tt/nstep
for (i in c("up", "dn", "p")) assign(i, y$params[i])
for (i in c("stree", "exertree", "oppricetree", "probtree")) assign(i,
y[["i"]])
nn <- 0:nstep
payoffmult <- ifelse((putopt), -1, 1)
stree <- y$stree
exertree <- y$exertree
oppricetree <- y$oppricetree
probtree <- y$probtree
bondtree <- y$bondtree
deltatree <- y$deltatree
plotcolor <- ifelse(exertree, "green3", "red")
if (saveplot)
pdf(saveplotfn)
ylim_default <- c(0, max(stree) * 1.03)
savepar <- par(no.readonly = TRUE)
if (logy)
par(ylog = TRUE)
plot(rep(nn, nn + 1) * h, stree[stree > 0], ylim = ifelse(c(setylim,
setylim), ylimval, c(min(stree[stree > 1] - 0.95), max(stree) *
1.03)), col = plotcolor[stree > 0], pch = 21,
cex = ifelse(stree[stree > 0], sqrt(probtree[stree > 0]) *
pointsize, 1), bg = plotcolor[stree > 0],
xlab = ifelse(titles, "Période binomiale (année)", ""),
ylab = ifelse(titles, "Prix de l'action ($)", ""),
main = if (titles) paste(ifelse(putopt, "Option de vente", "Option d'achat"),
ifelse(american, "américaine", "européenne")),
log = ifelse(logy, "y", ""))
if (titles)
mtext(paste0("Stock = ", format(s, digits = 3), ",Prix d'exercice = ",
format(k, digits = 3), ", Temps = ", format(tt, digits = 4),
ifelse(tt == 1, " an,", " ans,"), " Prix = ",
format(oppricetree[1, 1], digits = 5)))
if (drawstrike)
abline(h = k, lty=2)
yoffset <- ifelse(setylim, 0.03 * (ylimval[2] - ylimval[1]),
0.03 * max(stree))
if (plotarrows) {
for (i in 1:nstep) {
for (j in 1:i) {
arrows((i - 1) * h, stree[j, i], c(i, i) * h,
c(stree[j, i + 1], stree[j + 1, i + 1]), length = 0.06)
}
}
}
if (plotvalues) {
for (i in 1:(nstep + 1)) {
text((i - 1) * h, stree[1:i, i] + yoffset + 3, format(stree[1:i,
i],
digits = 3), cex = 0.8)
}
for (i in 1:(nstep)) {
text((i - 1) * h, stree[1:i, i] + yoffset, format(deltatree[1:i,
i],
digits = 3), cex = 0.8, col="deeppink")
}
for (i in 1:(nstep)) {
text((i - 1) * h, stree[1:i, i] + yoffset-8, format(bondtree[1:i,
i],
digits = 3), cex = 0.8, col="blue")
}
for (i in 1:(nstep)) {
text((i - 1) * h, stree[1:i, i] + yoffset-11, format(oppricetree[1:i, i],
digits = 3), cex = 0.8, col="purple")
}
legend("topleft", c("S", "Delta", "B", "Prix"), bty="n", lty=rep(1, 6),
col=c("black", "deeppink", "blue", "purple"), cex=0.8)
}
if (saveplot)
dev.off()
if (returnprice)
return(oppricetree[1, 1])
}
## moyenne taux banque du canada, mensuelle
r <- mean(banque_can[, 2])/100
h <- 1/12 # les données sont mensuelles
longeur_donnee <- length(data_histo)
donnee_ln <- numeric(longeur_donnee) # pour le remplir
donnee_ln[1] <- NA
for (i in 2:longeur_donnee){
(donnee_ln[i] <- log(data_histo[i]/data_histo[i-1]))
}
sig <- sd(donnee_ln[-1])/sqrt(h)
binomopt
library(derivmkts)
binomopt
